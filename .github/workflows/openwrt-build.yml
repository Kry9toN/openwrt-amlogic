name: Build OpenWrt

on:
  push:
    branches: [ master ]
  schedule:
    - cron: '0 17 * * *'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-21.02
  TZ: Asia/Jakarta

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
    uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: cp -f config/.config openwrt/.config

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Organize armvirt files
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "TMPFILEPATH=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload armvirt directory to Actions
      uses: actions/upload-artifact@v2
      if: steps.organize.outputs.status == 'success'
      with:
        name: openwrt_armvirt_64_${{ env.FILE_DATE }}
        path: ${{ env.TMPFILEPATH }}
        retention-days: 3
        if-no-files-found: ignore

    - name: Build OpenWrt firmware
      if: steps.compile.outputs.status == 'success'
      id: build
      run: |
        git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt.git
        cd amlogic-s9xxx-openwrt/
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        cp -f ../openwrt/bin/targets/*/*/*.tar.gz openwrt-armvirt/ && sync
        sudo rm -rf ../openwrt && sync
        sudo rm -rf /workdir && sync
        sudo chmod +x make
        sudo ./make -d -b s905x -k 5.9.16
        cd out/ && sudo gzip *.img
        cp -f ../openwrt-armvirt/*.tar.gz . && sync
        echo "FILEPATH=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: steps.build.outputs.status == 'success'
      with:
        path: ${{ env.FILEPATH }}/